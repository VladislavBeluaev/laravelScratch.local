/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/url-pattern/lib/url-pattern.js":
/*!*****************************************************!*\
  !*** ./node_modules/url-pattern/lib/url-pattern.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// Generated by CoffeeScript 1.10.0
var slice = [].slice;

(function(root, factory) {
  if (( true) && (__webpack_require__(/*! !webpack amd options */ "./node_modules/webpack/buildin/amd-options.js") != null)) {
    return !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ( true && exports !== null) {
    return module.exports = factory();
  } else {
    return root.UrlPattern = factory();
  }
})(this, function() {
  var P, UrlPattern, astNodeContainsSegmentsForProvidedParams, astNodeToNames, astNodeToRegexString, baseAstNodeToRegexString, concatMap, defaultOptions, escapeForRegex, getParam, keysAndValuesToObject, newParser, regexGroupCount, stringConcatMap, stringify;
  escapeForRegex = function(string) {
    return string.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
  };
  concatMap = function(array, f) {
    var i, length, results;
    results = [];
    i = -1;
    length = array.length;
    while (++i < length) {
      results = results.concat(f(array[i]));
    }
    return results;
  };
  stringConcatMap = function(array, f) {
    var i, length, result;
    result = '';
    i = -1;
    length = array.length;
    while (++i < length) {
      result += f(array[i]);
    }
    return result;
  };
  regexGroupCount = function(regex) {
    return (new RegExp(regex.toString() + '|')).exec('').length - 1;
  };
  keysAndValuesToObject = function(keys, values) {
    var i, key, length, object, value;
    object = {};
    i = -1;
    length = keys.length;
    while (++i < length) {
      key = keys[i];
      value = values[i];
      if (value == null) {
        continue;
      }
      if (object[key] != null) {
        if (!Array.isArray(object[key])) {
          object[key] = [object[key]];
        }
        object[key].push(value);
      } else {
        object[key] = value;
      }
    }
    return object;
  };
  P = {};
  P.Result = function(value, rest) {
    this.value = value;
    this.rest = rest;
  };
  P.Tagged = function(tag, value) {
    this.tag = tag;
    this.value = value;
  };
  P.tag = function(tag, parser) {
    return function(input) {
      var result, tagged;
      result = parser(input);
      if (result == null) {
        return;
      }
      tagged = new P.Tagged(tag, result.value);
      return new P.Result(tagged, result.rest);
    };
  };
  P.regex = function(regex) {
    return function(input) {
      var matches, result;
      matches = regex.exec(input);
      if (matches == null) {
        return;
      }
      result = matches[0];
      return new P.Result(result, input.slice(result.length));
    };
  };
  P.sequence = function() {
    var parsers;
    parsers = 1 <= arguments.length ? slice.call(arguments, 0) : [];
    return function(input) {
      var i, length, parser, rest, result, values;
      i = -1;
      length = parsers.length;
      values = [];
      rest = input;
      while (++i < length) {
        parser = parsers[i];
        result = parser(rest);
        if (result == null) {
          return;
        }
        values.push(result.value);
        rest = result.rest;
      }
      return new P.Result(values, rest);
    };
  };
  P.pick = function() {
    var indexes, parsers;
    indexes = arguments[0], parsers = 2 <= arguments.length ? slice.call(arguments, 1) : [];
    return function(input) {
      var array, result;
      result = P.sequence.apply(P, parsers)(input);
      if (result == null) {
        return;
      }
      array = result.value;
      result.value = array[indexes];
      return result;
    };
  };
  P.string = function(string) {
    var length;
    length = string.length;
    return function(input) {
      if (input.slice(0, length) === string) {
        return new P.Result(string, input.slice(length));
      }
    };
  };
  P.lazy = function(fn) {
    var cached;
    cached = null;
    return function(input) {
      if (cached == null) {
        cached = fn();
      }
      return cached(input);
    };
  };
  P.baseMany = function(parser, end, stringResult, atLeastOneResultRequired, input) {
    var endResult, parserResult, rest, results;
    rest = input;
    results = stringResult ? '' : [];
    while (true) {
      if (end != null) {
        endResult = end(rest);
        if (endResult != null) {
          break;
        }
      }
      parserResult = parser(rest);
      if (parserResult == null) {
        break;
      }
      if (stringResult) {
        results += parserResult.value;
      } else {
        results.push(parserResult.value);
      }
      rest = parserResult.rest;
    }
    if (atLeastOneResultRequired && results.length === 0) {
      return;
    }
    return new P.Result(results, rest);
  };
  P.many1 = function(parser) {
    return function(input) {
      return P.baseMany(parser, null, false, true, input);
    };
  };
  P.concatMany1Till = function(parser, end) {
    return function(input) {
      return P.baseMany(parser, end, true, true, input);
    };
  };
  P.firstChoice = function() {
    var parsers;
    parsers = 1 <= arguments.length ? slice.call(arguments, 0) : [];
    return function(input) {
      var i, length, parser, result;
      i = -1;
      length = parsers.length;
      while (++i < length) {
        parser = parsers[i];
        result = parser(input);
        if (result != null) {
          return result;
        }
      }
    };
  };
  newParser = function(options) {
    var U;
    U = {};
    U.wildcard = P.tag('wildcard', P.string(options.wildcardChar));
    U.optional = P.tag('optional', P.pick(1, P.string(options.optionalSegmentStartChar), P.lazy(function() {
      return U.pattern;
    }), P.string(options.optionalSegmentEndChar)));
    U.name = P.regex(new RegExp("^[" + options.segmentNameCharset + "]+"));
    U.named = P.tag('named', P.pick(1, P.string(options.segmentNameStartChar), P.lazy(function() {
      return U.name;
    })));
    U.escapedChar = P.pick(1, P.string(options.escapeChar), P.regex(/^./));
    U["static"] = P.tag('static', P.concatMany1Till(P.firstChoice(P.lazy(function() {
      return U.escapedChar;
    }), P.regex(/^./)), P.firstChoice(P.string(options.segmentNameStartChar), P.string(options.optionalSegmentStartChar), P.string(options.optionalSegmentEndChar), U.wildcard)));
    U.token = P.lazy(function() {
      return P.firstChoice(U.wildcard, U.optional, U.named, U["static"]);
    });
    U.pattern = P.many1(P.lazy(function() {
      return U.token;
    }));
    return U;
  };
  defaultOptions = {
    escapeChar: '\\',
    segmentNameStartChar: ':',
    segmentValueCharset: 'a-zA-Z0-9-_~ %',
    segmentNameCharset: 'a-zA-Z0-9',
    optionalSegmentStartChar: '(',
    optionalSegmentEndChar: ')',
    wildcardChar: '*'
  };
  baseAstNodeToRegexString = function(astNode, segmentValueCharset) {
    if (Array.isArray(astNode)) {
      return stringConcatMap(astNode, function(node) {
        return baseAstNodeToRegexString(node, segmentValueCharset);
      });
    }
    switch (astNode.tag) {
      case 'wildcard':
        return '(.*?)';
      case 'named':
        return "([" + segmentValueCharset + "]+)";
      case 'static':
        return escapeForRegex(astNode.value);
      case 'optional':
        return '(?:' + baseAstNodeToRegexString(astNode.value, segmentValueCharset) + ')?';
    }
  };
  astNodeToRegexString = function(astNode, segmentValueCharset) {
    if (segmentValueCharset == null) {
      segmentValueCharset = defaultOptions.segmentValueCharset;
    }
    return '^' + baseAstNodeToRegexString(astNode, segmentValueCharset) + '$';
  };
  astNodeToNames = function(astNode) {
    if (Array.isArray(astNode)) {
      return concatMap(astNode, astNodeToNames);
    }
    switch (astNode.tag) {
      case 'wildcard':
        return ['_'];
      case 'named':
        return [astNode.value];
      case 'static':
        return [];
      case 'optional':
        return astNodeToNames(astNode.value);
    }
  };
  getParam = function(params, key, nextIndexes, sideEffects) {
    var index, maxIndex, result, value;
    if (sideEffects == null) {
      sideEffects = false;
    }
    value = params[key];
    if (value == null) {
      if (sideEffects) {
        throw new Error("no values provided for key `" + key + "`");
      } else {
        return;
      }
    }
    index = nextIndexes[key] || 0;
    maxIndex = Array.isArray(value) ? value.length - 1 : 0;
    if (index > maxIndex) {
      if (sideEffects) {
        throw new Error("too few values provided for key `" + key + "`");
      } else {
        return;
      }
    }
    result = Array.isArray(value) ? value[index] : value;
    if (sideEffects) {
      nextIndexes[key] = index + 1;
    }
    return result;
  };
  astNodeContainsSegmentsForProvidedParams = function(astNode, params, nextIndexes) {
    var i, length;
    if (Array.isArray(astNode)) {
      i = -1;
      length = astNode.length;
      while (++i < length) {
        if (astNodeContainsSegmentsForProvidedParams(astNode[i], params, nextIndexes)) {
          return true;
        }
      }
      return false;
    }
    switch (astNode.tag) {
      case 'wildcard':
        return getParam(params, '_', nextIndexes, false) != null;
      case 'named':
        return getParam(params, astNode.value, nextIndexes, false) != null;
      case 'static':
        return false;
      case 'optional':
        return astNodeContainsSegmentsForProvidedParams(astNode.value, params, nextIndexes);
    }
  };
  stringify = function(astNode, params, nextIndexes) {
    if (Array.isArray(astNode)) {
      return stringConcatMap(astNode, function(node) {
        return stringify(node, params, nextIndexes);
      });
    }
    switch (astNode.tag) {
      case 'wildcard':
        return getParam(params, '_', nextIndexes, true);
      case 'named':
        return getParam(params, astNode.value, nextIndexes, true);
      case 'static':
        return astNode.value;
      case 'optional':
        if (astNodeContainsSegmentsForProvidedParams(astNode.value, params, nextIndexes)) {
          return stringify(astNode.value, params, nextIndexes);
        } else {
          return '';
        }
    }
  };
  UrlPattern = function(arg1, arg2) {
    var groupCount, options, parsed, parser, withoutWhitespace;
    if (arg1 instanceof UrlPattern) {
      this.isRegex = arg1.isRegex;
      this.regex = arg1.regex;
      this.ast = arg1.ast;
      this.names = arg1.names;
      return;
    }
    this.isRegex = arg1 instanceof RegExp;
    if (!(('string' === typeof arg1) || this.isRegex)) {
      throw new TypeError('argument must be a regex or a string');
    }
    if (this.isRegex) {
      this.regex = arg1;
      if (arg2 != null) {
        if (!Array.isArray(arg2)) {
          throw new Error('if first argument is a regex the second argument may be an array of group names but you provided something else');
        }
        groupCount = regexGroupCount(this.regex);
        if (arg2.length !== groupCount) {
          throw new Error("regex contains " + groupCount + " groups but array of group names contains " + arg2.length);
        }
        this.names = arg2;
      }
      return;
    }
    if (arg1 === '') {
      throw new Error('argument must not be the empty string');
    }
    withoutWhitespace = arg1.replace(/\s+/g, '');
    if (withoutWhitespace !== arg1) {
      throw new Error('argument must not contain whitespace');
    }
    options = {
      escapeChar: (arg2 != null ? arg2.escapeChar : void 0) || defaultOptions.escapeChar,
      segmentNameStartChar: (arg2 != null ? arg2.segmentNameStartChar : void 0) || defaultOptions.segmentNameStartChar,
      segmentNameCharset: (arg2 != null ? arg2.segmentNameCharset : void 0) || defaultOptions.segmentNameCharset,
      segmentValueCharset: (arg2 != null ? arg2.segmentValueCharset : void 0) || defaultOptions.segmentValueCharset,
      optionalSegmentStartChar: (arg2 != null ? arg2.optionalSegmentStartChar : void 0) || defaultOptions.optionalSegmentStartChar,
      optionalSegmentEndChar: (arg2 != null ? arg2.optionalSegmentEndChar : void 0) || defaultOptions.optionalSegmentEndChar,
      wildcardChar: (arg2 != null ? arg2.wildcardChar : void 0) || defaultOptions.wildcardChar
    };
    parser = newParser(options);
    parsed = parser.pattern(arg1);
    if (parsed == null) {
      throw new Error("couldn't parse pattern");
    }
    if (parsed.rest !== '') {
      throw new Error("could only partially parse pattern");
    }
    this.ast = parsed.value;
    this.regex = new RegExp(astNodeToRegexString(this.ast, options.segmentValueCharset));
    this.names = astNodeToNames(this.ast);
  };
  UrlPattern.prototype.match = function(url) {
    var groups, match;
    match = this.regex.exec(url);
    if (match == null) {
      return null;
    }
    groups = match.slice(1);
    if (this.names) {
      return keysAndValuesToObject(this.names, groups);
    } else {
      return groups;
    }
  };
  UrlPattern.prototype.stringify = function(params) {
    if (params == null) {
      params = {};
    }
    if (this.isRegex) {
      throw new Error("can't stringify patterns generated from a regex");
    }
    if (params !== Object(params)) {
      throw new Error("argument must be an object or undefined");
    }
    return stringify(this.ast, params, {});
  };
  UrlPattern.escapeForRegex = escapeForRegex;
  UrlPattern.concatMap = concatMap;
  UrlPattern.stringConcatMap = stringConcatMap;
  UrlPattern.regexGroupCount = regexGroupCount;
  UrlPattern.keysAndValuesToObject = keysAndValuesToObject;
  UrlPattern.P = P;
  UrlPattern.newParser = newParser;
  UrlPattern.defaultOptions = defaultOptions;
  UrlPattern.astNodeToRegexString = astNodeToRegexString;
  UrlPattern.astNodeToNames = astNodeToNames;
  UrlPattern.getParam = getParam;
  UrlPattern.astNodeContainsSegmentsForProvidedParams = astNodeContainsSegmentsForProvidedParams;
  UrlPattern.stringify = stringify;
  return UrlPattern;
});


/***/ }),

/***/ "./node_modules/webpack/buildin/amd-options.js":
/*!****************************************!*\
  !*** (webpack)/buildin/amd-options.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */
module.exports = __webpack_amd_options__;

/* WEBPACK VAR INJECTION */}.call(this, {}))

/***/ }),

/***/ "./resources/js/_master.js":
/*!*********************************!*\
  !*** ./resources/js/_master.js ***!
  \*********************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _classes_ErrorBag_class__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./classes/ErrorBag.class */ "./resources/js/classes/ErrorBag.class.js");
/* harmony import */ var _init_objects_errors_errorsInitObj__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./init objects/errors/errorsInitObj */ "./resources/js/init objects/errors/errorsInitObj.js");
/* harmony import */ var _classes_Ajax_class__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./classes/Ajax.class */ "./resources/js/classes/Ajax.class.js");
/* harmony import */ var _classes_Task_class__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./classes/Task.class */ "./resources/js/classes/Task.class.js");
/* harmony import */ var _classes_TestPromise_class__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./classes/TestPromise.class */ "./resources/js/classes/TestPromise.class.js");
/* harmony import */ var _init_objects_task_taskInitObj__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./init objects/task/taskInitObj */ "./resources/js/init objects/task/taskInitObj.js");
/* harmony import */ var _init_objects_task_ajaxReqSettings__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./init objects/task/ajaxReqSettings */ "./resources/js/init objects/task/ajaxReqSettings.js");
/* harmony import */ var _init_objects_routing__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./init objects/routing */ "./resources/js/init objects/routing.js");
/* harmony import */ var _classes_Project_class__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./classes/Project.class */ "./resources/js/classes/Project.class.js");
/* harmony import */ var _init_objects_project_projectInitObj__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./init objects/project/projectInitObj */ "./resources/js/init objects/project/projectInitObj.js");
/* harmony import */ var _init_objects_project_ajaxReqSettings__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./init objects/project/ajaxReqSettings */ "./resources/js/init objects/project/ajaxReqSettings.js");
/* harmony import */ var url_pattern__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! url-pattern */ "./node_modules/url-pattern/lib/url-pattern.js");
/* harmony import */ var url_pattern__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(url_pattern__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _classes_NewsResource_class__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./classes/NewsResource.class */ "./resources/js/classes/NewsResource.class.js");














(function ($, undefined) {
  $(function () {
    var url = location.pathname.substr(1);
    var patternProject = new url_pattern__WEBPACK_IMPORTED_MODULE_11___default.a(_init_objects_routing__WEBPACK_IMPORTED_MODULE_7__["routing"].project);
    var routingList = Object.keys(_init_objects_routing__WEBPACK_IMPORTED_MODULE_7__["routing"]);
    var errorBag = new _classes_ErrorBag_class__WEBPACK_IMPORTED_MODULE_0__["ErrorBag"](_init_objects_errors_errorsInitObj__WEBPACK_IMPORTED_MODULE_1__["errorsInitObj"]);
    errorBag.hideAlertsIForms();

    try {
      switch (url) {
        case "":
          console.log("index page");
          break;

        case "tasks":
          new _classes_Task_class__WEBPACK_IMPORTED_MODULE_3__["Task"](_init_objects_task_taskInitObj__WEBPACK_IMPORTED_MODULE_5__["taskInitObj"], new _classes_Ajax_class__WEBPACK_IMPORTED_MODULE_2__["Ajax"](_init_objects_task_ajaxReqSettings__WEBPACK_IMPORTED_MODULE_6__["ajaxReqSettings"]), errorBag).run();
          new _classes_TestPromise_class__WEBPACK_IMPORTED_MODULE_4__["TestPromises"](5).run();
          break;

        /*case "projects":
            (new Project(projectInitObj,new Ajax(projectAjaxReqSettings))).run();
            break;*/

        default:
          throw new Error("404 Page not found!!");
      }
    } catch (e) {
      if (patternProject.match(url) !== null) {
        new _classes_Project_class__WEBPACK_IMPORTED_MODULE_8__["Project"](_init_objects_project_projectInitObj__WEBPACK_IMPORTED_MODULE_9__["projectInitObj"], new _classes_Ajax_class__WEBPACK_IMPORTED_MODULE_2__["Ajax"](_init_objects_project_ajaxReqSettings__WEBPACK_IMPORTED_MODULE_10__["ajaxReqSettings"]), errorBag).run();
      } else {
        console.log(e.stack);
      }
    }
  });
})(jQuery);

/***/ }),

/***/ "./resources/js/classes/AbstractClasses/Model.class.js":
/*!*************************************************************!*\
  !*** ./resources/js/classes/AbstractClasses/Model.class.js ***!
  \*************************************************************/
/*! exports provided: Model */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Model", function() { return Model; });
/* harmony import */ var _init_objects_project_ajaxReqSettings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../init objects/project/ajaxReqSettings */ "./resources/js/init objects/project/ajaxReqSettings.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }


var Model =
/*#__PURE__*/
function () {
  function Model(initObj) {
    var ajax = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

    _classCallCheck(this, Model);

    this._initObj = initObj;
    this._ajax = ajax;
  }

  _createClass(Model, [{
    key: "run",
    value: function run() {}
  }, {
    key: "_setRequestSettings",
    value: function _setRequestSettings(settings) {
      this._ajax.req_settings.type = settings.type || _init_objects_project_ajaxReqSettings__WEBPACK_IMPORTED_MODULE_0__["ajaxReqSettings"].type;
      this._ajax.req_settings.url = settings.url || _init_objects_project_ajaxReqSettings__WEBPACK_IMPORTED_MODULE_0__["ajaxReqSettings"].url;
      this._ajax.req_settings.data = settings.data || _init_objects_project_ajaxReqSettings__WEBPACK_IMPORTED_MODULE_0__["ajaxReqSettings"].data;
    }
  }]);

  return Model;
}();

/***/ }),

/***/ "./resources/js/classes/Ajax.class.js":
/*!********************************************!*\
  !*** ./resources/js/classes/Ajax.class.js ***!
  \********************************************/
/*! exports provided: Ajax */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Ajax", function() { return Ajax; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Ajax =
/*#__PURE__*/
function () {
  function Ajax(settings) {
    _classCallCheck(this, Ajax);

    this.req_settings = settings;
  }

  _createClass(Ajax, [{
    key: "send",
    value: function send(callbackEvents) {
      $.ajax(Object.assign(this.req_settings, callbackEvents));
    }
  }, {
    key: "call",
    value: function call() {
      var _this = this;

      var preloader$ = $(".".concat(this.req_settings.preloader));
      return new Promise(function (resolve, reject) {
        var callbackEvents = {
          beforeSend: function beforeSend() {
            console.log('call');
            preloader$.removeClass('d-none');
          },
          success: function success(response) {
            resolve(response);
          },
          error: function error(jqXHR) {
            reject(jqXHR);
          },
          complete: function complete() {
            preloader$.addClass('d-none');
          }
        };
        $.ajax(Object.assign(_this.req_settings, callbackEvents));
      });
    }
  }, {
    key: "_makeAjaxURLFromTemplate",
    value: function _makeAjaxURLFromTemplate(templateURL) {
      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

      if (templateURL.includes('{') && templateURL.includes('}')) {
        var urlFragments = templateURL.split('}');

        if (params.length !== urlFragments.length - 1) {
          throw new Error("The number of parameters does not match the number of replaced fragments");
        }

        var resultUrl = urlFragments.filter(function (item) {
          return item !== '';
        });
        resultUrl.forEach(function (item, index, arr) {
          var leftBracketPos = item.indexOf('{');
          var newItem = item.replace(item.substr(leftBracketPos), params[index]);
          arr.splice(index, 1, newItem);
        });
        return resultUrl.join('');
      }

      return templateURL;
    }
  }]);

  return Ajax;
}();

/***/ }),

/***/ "./resources/js/classes/ErrorBag.class.js":
/*!************************************************!*\
  !*** ./resources/js/classes/ErrorBag.class.js ***!
  \************************************************/
/*! exports provided: ErrorBag */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrorBag", function() { return ErrorBag; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var ErrorBag =
/*#__PURE__*/
function () {
  function ErrorBag(settings) {
    _classCallCheck(this, ErrorBag);

    this._initObj = settings;
  }

  _createClass(ErrorBag, [{
    key: "hideAlertsIForms",
    value: function hideAlertsIForms() {
      $(".".concat(this._initObj.borderHighlightingClass)).on('focus.hideErrMsg', $.proxy(this._hideErrBorderHandler, this));
    }
  }, {
    key: "_hideErrBorderHandler",
    value: function _hideErrBorderHandler(event) {
      $(event.target).removeClass(this._initObj.borderHighlightingClass).off('focus.hideErrMsg');
    }
  }, {
    key: "showDestroyErr",
    value: function showDestroyErr() {
      var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      var alert$ = $(".".concat(this._initObj.ajaxErrorBox));
      if (!alert$.length) throw new Error('Errors have occurred when trying to show error message.');
      alert$.queue(function (next) {
        $(this).removeClass('d-none');
        next();
      }).queue(function (next) {
        $(this).fadeOut(0);
        if (message.length !== 0) $(this).text(message);
        next();
      }).queue(function (next) {
        $(this).fadeIn('normal');
        next();
      });
    }
  }]);

  return ErrorBag;
}();

/***/ }),

/***/ "./resources/js/classes/NewsResource.class.js":
/*!****************************************************!*\
  !*** ./resources/js/classes/NewsResource.class.js ***!
  \****************************************************/
/*! exports provided: NewsResource */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NewsResource", function() { return NewsResource; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var NewsResource = function NewsResource() {
  _classCallCheck(this, NewsResource);
};

/***/ }),

/***/ "./resources/js/classes/Project.class.js":
/*!***********************************************!*\
  !*** ./resources/js/classes/Project.class.js ***!
  \***********************************************/
/*! exports provided: Project */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Project", function() { return Project; });
/* harmony import */ var _AbstractClasses_Model_class__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbstractClasses/Model.class */ "./resources/js/classes/AbstractClasses/Model.class.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }


var Project =
/*#__PURE__*/
function (_Model) {
  _inherits(Project, _Model);

  function Project(initObj, ajax, errorBag) {
    var _this;

    _classCallCheck(this, Project);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Project).call(this, initObj, ajax));
    _this._errorBag = errorBag;
    return _this;
  }

  _createClass(Project, [{
    key: "run",
    value: function run() {
      _get(_getPrototypeOf(Project.prototype), "run", this).call(this);

      var _this$_initObj = this._initObj,
          container = _this$_initObj.container,
          removeTask = _this$_initObj.removeTask;
      $(container).on('click.removeProject', removeTask, $.proxy(this._removeProjectHandler, this));
    }
  }, {
    key: "_removeProjectHandler",
    value: function _removeProjectHandler(event) {
      var _this2 = this;

      var target = event.target;
      var targetWrapper$ = $(this._initObj.removeProject);
      if (targetWrapper$[0] !== target.closest('a')) return;
      var userAnswer = confirm("Do you really want delete this project?");
      if (userAnswer === false) return false;

      this._setRequestSettings({
        url: targetWrapper$[0].pathname,
        data: JSON.stringify({
          is_deleted: 'recycle'
        })
      });

      try {
        this._ajax.call().then(function (response) {
          var redirectUrl = response.redirectTo;

          if (!redirectUrl) {
            throw new URIError("Not found redirectUrl. Check ajax return redirectUrl json");
          }

          window.location.replace(redirectUrl);
        })["catch"](function (error) {
          if (error instanceof URIError) {
            _this2._errorBag.showDestroyErr();

            console.log(error.message);
            return false;
          }

          if ($.type(error) === 'error') {
            _this2._errorBag.showDestroyErr();

            console.log("".concat(error.message, ". Check variable redirectUrl in then method"));
            return false;
          }

          var _error$responseJSON = error.responseJSON,
              userInfo = _error$responseJSON.userInfo,
              consoleErrorArr = _error$responseJSON.error;

          _this2._errorBag.showDestroyErr(userInfo); //console.log(userInfo);


          consoleErrorArr.forEach(function (item) {
            console.log(item);
          });
        });
      } catch (error) {
        console.log(error.stack);
      }

      event.preventDefault();
    }
  }]);

  return Project;
}(_AbstractClasses_Model_class__WEBPACK_IMPORTED_MODULE_0__["Model"]);

/***/ }),

/***/ "./resources/js/classes/Task.class.js":
/*!********************************************!*\
  !*** ./resources/js/classes/Task.class.js ***!
  \********************************************/
/*! exports provided: Task */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Task", function() { return Task; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Task =
/*#__PURE__*/
function () {
  function Task(initObj, ajax) {
    _classCallCheck(this, Task);

    this._initObj = initObj;
    this._ajax = ajax;
  }

  _createClass(Task, [{
    key: "run",
    value: function run() {
      var _this$_initObj = this._initObj,
          container = _this$_initObj.container,
          editTask = _this$_initObj.editTask,
          completeTask = _this$_initObj.completeTask,
          removeTask = _this$_initObj.removeTask,
          saveTask = _this$_initObj.saveTask,
          cancelEditTask = _this$_initObj.cancelEditTask;
      $(container).on('click.initEditTask', editTask, $.proxy(this._initEditTaskHandler, this));
      $(container).on('click.saveEditTask', saveTask, $.proxy(this._saveEditTaskHandler, this));
      $(container).on('click.cancelEditTask', cancelEditTask, $.proxy(Task._cancelEditTaskHandler, this));
      $(document.body).on('keydown.cancelEditTaskKeyboard', $.proxy(Task._cancelEditTaskKeyboard, this));
      $(container).on('click.completeTask', completeTask, $.proxy(this._completeTasksHandler, this));
      $(container).on('click.removeTask', removeTask, $.proxy(this._removeTasksHandler, this));
    }
  }, {
    key: "_initEditTaskHandler",
    value: function _initEditTaskHandler(event) {
      event.preventDefault();
      var target = event.target;
      var isEditIcon = Array.from(target.classList).filter(function (item) {
        return item.includes('edit');
      });
      if (!isEditIcon.length) return false;

      this._previousEditTask();

      this._currentEditTaskContainer$ = $(target.closest('li')).addClass(this._initObj.activeEditTask);

      try {
        Task.readOnlyToReadWriteTaskToggle(this._currentEditTaskContainer$, 'write');

        this._currentEditTaskContainer$.data('current-task-val', this._currentEditTaskContainer$.find('input').val());

        this._currentEditTaskContainer$.on('input.editTaskHandler', 'input', $.proxy(this._editTaskHandler, this));
      } catch (e) {
        console.log(e.stack);
      }
    }
  }, {
    key: "_saveEditTaskHandler",
    value: function _saveEditTaskHandler(event) {
      var target = event.target;
      if ($(target).hasClass('save-edit-task') === false) return false;
      var saveIconWrapper = target.closest('a');
      if (saveIconWrapper.title !== 'save task') return false;
      var currentEditTaskContainer$ = $(".".concat(this._initObj.activeEditTask));
      var self = this;

      this._setRequestSettings({
        type: "PATCH",
        url: saveIconWrapper.pathname,
        data: JSON.stringify({
          description: Task.getReadWriteInputVal(currentEditTaskContainer$)
        })
      });

      this._ajax.send({
        success: function success(response) {
          try {
            if (JSON.parse(response).update === true) Task.save.call(self, currentEditTaskContainer$);
          } catch (e) {
            console.log(e.stack);
          }
        },
        error: function error(data, textStatus, errorThrown) {
          console.log(data.getAllResponseHeaders());
          console.log(errorThrown);
        }
      });

      event.preventDefault();
      event.stopPropagation();
    }
  }, {
    key: "_previousEditTask",
    value: function _previousEditTask() {
      var previousEditTask$ = $(".".concat(this._initObj.activeEditTask));
      if (!previousEditTask$.length) return false;
      var committedChangesIcon$ = previousEditTask$.find(this._initObj.saveTask).find('i');
      var inputTaskValue$ = previousEditTask$.find('input');

      if (committedChangesIcon$.hasClass('save-edit-task') === true) {
        var needToSave = window.confirm("Имя предыдущей задачи было изменено, сохранить данные?");
        console.log(needToSave);
        if (needToSave === false) Task.userCancelEditTask.call(this, previousEditTask$);
        Task.userSaveTask.call(this, previousEditTask$);
      }

      if (Task._isEmptyField(inputTaskValue$) === false) {
        alert("Поле задача не может быть пустым!");
        Task.userCancelEditTask.call(this, previousEditTask$);
      }

      if (committedChangesIcon$.hasClass('save-edit-task') === false && Task._isEmptyField(inputTaskValue$)) {
        previousEditTask$.removeClass(this._initObj.activeEditTask);
      }
    }
  }, {
    key: "_editTaskHandler",
    value: function _editTaskHandler(event) {
      var target$ = $(event.target);

      if (this._currentEditTaskContainer$.data('current-task-val') !== target$.val() && Task._isEmptyField(target$)) {
        this._changeControlButtonsIconColor(true, this._currentEditTaskContainer$);
      } else {
        this._changeControlButtonsIconColor(false, this._currentEditTaskContainer$);
      }
    }
  }, {
    key: "_completeTasksHandler",
    value: function _completeTasksHandler(event) {
      var target = event.target;
      var completeIconWrapper = target.closest('a');
      if (completeIconWrapper.title !== 'complete task') return false;

      this._previousEditTask();

      var answer = confirm('Вы действительно хотите завершить задачу?');
      if (answer === false) return false;
      var completeTaskContainer$ = $(target.closest('li'));

      this._setRequestSettings({
        type: "PATCH",
        url: completeIconWrapper.pathname,
        data: JSON.stringify({
          is_completed: true
        })
      });

      this._ajax.send({
        success: function success(response) {
          try {
            if (JSON.parse(response).is_completed === true) {
              Task.successAjaxHandler(completeTaskContainer$, {
                first: function first() {
                  $(this).addClass('complete-task');
                }
              });
            }
          } catch (e) {
            console.log(e.stack);
          }
        },
        error: function error(data, textStatus, errorThrown) {
          console.log(data.getAllResponseHeaders());
          console.log(errorThrown);
        }
      });

      event.preventDefault();
    }
  }, {
    key: "_removeTasksHandler",
    value: function _removeTasksHandler(event) {
      var target = event.target;
      var removeIconWrapper = target.closest('a');
      if (removeIconWrapper.title !== 'delete task') return false;

      this._previousEditTask();

      var answer = confirm('Вы действительно хотите удалить задачу?');
      if (answer === false) return false;
      var removeTaskContainer$ = $(target.closest('li'));

      this._setRequestSettings({
        type: "DELETE",
        url: removeIconWrapper.pathname,
        data: JSON.stringify({
          is_deleted: 'recycle'
        })
      });

      this._ajax.send({
        success: function success(response) {
          try {
            console.log(JSON.parse(response).is_deleted);

            if (JSON.parse(response).is_deleted === true) {
              Task.successAjaxHandler(removeTaskContainer$);
            }
          } catch (e) {
            console.log(e.stack);
          }
        },
        error: function error(data, textStatus, errorThrown) {
          console.log(data.getAllResponseHeaders());
          console.log(errorThrown);
        }
      });

      event.preventDefault();
    }
  }, {
    key: "_setRequestSettings",
    value: function _setRequestSettings(settings) {
      this._ajax.req_settings.type = settings.type;
      this._ajax.req_settings.url = settings.url;
      this._ajax.req_settings.data = settings.data;
    }
  }, {
    key: "_changeControlButtonsIconColor",
    value: function _changeControlButtonsIconColor() {
      var isChange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var context$ = arguments.length > 1 ? arguments[1] : undefined;
      var saveEditButtonICon$ = $(this._initObj.saveTask, context$).find('i');
      var cancelSaveEditButtonICon$ = $(this._initObj.cancelEditTask, context$).find('i');
      if (isChange === true) Task.changeIconColor(saveEditButtonICon$, cancelSaveEditButtonICon$);else {
        Task.setDisableIconColor(saveEditButtonICon$, cancelSaveEditButtonICon$);
      }
    }
  }], [{
    key: "save",
    value: function save(taskItemContainer$) {
      Task.readOnlyToReadWriteTaskToggle(taskItemContainer$, 'read');
      taskItemContainer$.removeAttr('class');
      Task.getReadOnlyElem(taskItemContainer$).text(Task.getReadWriteInputVal(taskItemContainer$));

      Object.getPrototypeOf(this)._changeControlButtonsIconColor.apply(this, [false, taskItemContainer$]);
    }
  }, {
    key: "readOnlyToReadWriteTaskToggle",
    value: function readOnlyToReadWriteTaskToggle(context, mode) {
      var readOnlyTaskElem$ = Task.getReadOnlyElem(context);
      var readWriteTaskElem$ = Task.getReadWriteElem(context);

      switch (mode) {
        case "read":
          readOnlyTaskElem$.removeClass('no-display');
          readWriteTaskElem$.addClass('no-display');
          break;

        case "write":
          readOnlyTaskElem$.addClass('no-display');
          readWriteTaskElem$.removeClass('no-display').focus();
          break;

        default:
          throw new Error("mode does not exists");
      }
    }
  }, {
    key: "_cancelEditTaskHandler",
    value: function _cancelEditTaskHandler(event) {
      var target = event.target;
      if (target.closest('a').title !== 'cancel edit task') return false;
      var taskContainer$ = $(target.closest("li.".concat(Object.values(this)[0].activeEditTask)));
      taskContainer$.find('input').val(taskContainer$.data('current-task-val'));
      Task.readOnlyToReadWriteTaskToggle(taskContainer$, 'read');
      taskContainer$.removeAttr('class');
      event.preventDefault();
      event.stopPropagation();

      Object.getPrototypeOf(this)._changeControlButtonsIconColor.apply(this, [false, taskContainer$]); //no send ajax data

    }
  }, {
    key: "userSaveTask",
    value: function userSaveTask(taskContainer$) {
      taskContainer$.find(Object.values(this)[0].saveTask).children(':first-child').trigger('click.saveEditTask'); //send ajax data
    }
  }, {
    key: "userCancelEditTask",
    value: function userCancelEditTask(taskContainer$) {
      taskContainer$.find(Object.values(this)[0].cancelEditTask).children(':first-child').trigger('click.cancelEditTask');
      return -1; //no send ajax data
    }
  }, {
    key: "_cancelEditTaskKeyboard",
    value: function _cancelEditTaskKeyboard(event) {
      if (event.code === 'Escape') Task.userCancelEditTask.call(this, $(".".concat(Object.values(this)[0].activeEditTask)));
    }
  }, {
    key: "successAjaxHandler",
    value: function successAjaxHandler($taskContainer$) {
      var taskQueueContainer = $taskContainer$.queue();
      taskQueueContainer.push(function () {
        $(this).fadeOut(400);
        this.dequeue();
      });
      taskQueueContainer.push(function () {
        var siblingsCollection = $(this).siblings('li');
        $(this).remove();
        var listNumberElem = 'span:first-child';
        siblingsCollection.sort(function (x, y) {
          return $(x).find(listNumberElem).text() - $(y).find(listNumberElem).text();
        }).each(function (i, item) {
          $(item).find(listNumberElem).text(i + 1);
        });
        this.dequeue();
      });

      for (var _len = arguments.length, fxQueue = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        fxQueue[_key - 1] = arguments[_key];
      }

      if (fxQueue.length) {
        fxQueue.forEach(function (item) {
          var objectKey = Object.keys(item)[0];

          switch (objectKey) {
            case "first":
              taskQueueContainer.unshift(item.first);
              break;

            case "last":
              taskQueueContainer.push(item.last);
              break;

            default:
              throw new Error('Wrong format sending queue handlers');
          }
        });
      }

      taskQueueContainer.shift().call($taskContainer$);

      while (taskQueueContainer.length) {
        setTimeout(taskQueueContainer.shift().bind($taskContainer$), 200);
      }
      /*new Promise(resolve => {
          taskQueueContainer.shift().call($taskContainer$);
          setTimeout(resolve,0,taskQueueContainer);
      }).then((taskQueueContainer)=>{
          taskQueueContainer.shift().call($taskContainer$);
          return new Promise(resolve => {
              setTimeout(resolve,1000,taskQueueContainer);
          });
      }).then((taskQueueContainer)=>{
          taskQueueContainer.shift().call($taskContainer$);
      });*/

    }
  }, {
    key: "changeIconColor",
    value: function changeIconColor() {
      for (var _len2 = arguments.length, icons = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        icons[_key2] = arguments[_key2];
      }

      var saveIcon$ = icons[0],
          cancelIcon$ = icons[1];
      if (saveIcon$.hasClass('save-edit-task') === false) saveIcon$.addClass('save-edit-task');
      if (cancelIcon$.hasClass('cancel-edit-task') === false) cancelIcon$.addClass('cancel-edit-task');
    }
  }, {
    key: "setDisableIconColor",
    value: function setDisableIconColor() {
      for (var _len3 = arguments.length, icons = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        icons[_key3] = arguments[_key3];
      }

      var saveIcon$ = icons[0],
          cancelIcon$ = icons[1];
      if (saveIcon$.hasClass('save-edit-task') === true) saveIcon$.removeClass('save-edit-task');
      if (cancelIcon$.hasClass('cancel-edit-task') === true) cancelIcon$.removeClass('cancel-edit-task');
    }
  }, {
    key: "_isEmptyField",
    value: function _isEmptyField(input$) {
      if (input$.val() === '') {
        input$.attr('placeholder', 'The field cannot be empty');
        return false;
      }

      input$.removeAttr('placeholder');
      return true;
    }
  }, {
    key: "getReadOnlyElem",
    value: function getReadOnlyElem(context) {
      return $('.read-only', context);
    }
  }, {
    key: "getReadWriteElem",
    value: function getReadWriteElem(context) {
      return $('.read-write', context);
    }
  }, {
    key: "getReadWriteInputVal",
    value: function getReadWriteInputVal(context) {
      return Task.getReadWriteElem(context).find('input').val();
    }
  }]);

  return Task;
}();

/***/ }),

/***/ "./resources/js/classes/TestPromise.class.js":
/*!***************************************************!*\
  !*** ./resources/js/classes/TestPromise.class.js ***!
  \***************************************************/
/*! exports provided: TestPromises */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TestPromises", function() { return TestPromises; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var TestPromises =
/*#__PURE__*/
function () {
  function TestPromises(a) {
    _classCallCheck(this, TestPromises);
  }

  _createClass(TestPromises, [{
    key: "run",
    value: function run() {
      console.log('Request data...'); //this._emulateBackendResponse();
      //this.promiseBackendResponse();
      //his._emulatePromise();
      //this._delayPromise(3000);

      this._chainPromises();
    }
  }, {
    key: "_chainPromises",
    value: function _chainPromises() {
      var chain = new Promise(function (resolve) {
        setTimeout(resolve, 1000, 1);
      });
      var foo1 = chain.then(function (result) {
        console.log(result);
        return result * 2;
      });
      var foo2 = foo1.then(function (res) {
        console.log(res);
        return res * 2;
      });
      var foo3 = foo2.then(function (foo2) {
        console.log(foo2);
      });
    }
  }, {
    key: "_delayPromise",
    value: function _delayPromise(ms) {
      var delPromise = function delPromise(ms) {
        return new Promise(function (resolve) {
          setTimeout(resolve, ms, "done");
        });
      };

      delPromise(3000).then(function (result) {
        return alert("\u0432\u044B\u043F\u043E\u043B\u043D\u0438\u043B\u043E\u0441\u044C \u0447\u0435\u0440\u0435\u0437 3 \u0441\u0435\u043A\u0443\u043D\u0434\u044B c \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u043E\u043C ".concat(result));
      });
    }
  }, {
    key: "_emulatePromise",
    value: function _emulatePromise() {
      var getPhone = new Promise(function (resolve, reject) {
        var hasMoney = confirm("Do you have money?");

        if (hasMoney === true) {
          resolve({
            phoneMaker: 'Iphone',
            phoneModel: '8 plus',
            price: '800$',
            color: 'space gray',
            toString: function toString() {
              return "I have ".concat(this.phoneMaker, " ").concat(this.phoneModel, " in ").concat(this.color, " color.");
            }
          });
        } else {
          reject(new Error('You don\'t have enough money to buy this phone'));
        }
      });

      var havePhone = function havePhone(phone) {
        if ($.isPlainObject(phone)) {
          console.log(phone.toString());
          return true;
        }

        if ($.type(phone) === 'string') {
          console.log(phone);
        }

        return true;
      };

      var notHasPhone = function notHasPhone(error) {
        if (error instanceof Error) {
          console.log(error.message);
        }
      };

      var notifyFriends = function notifyFriends(phone) {
        var outPut = "I buy new ".concat(phone.phoneMaker, "!!");
        return Promise.resolve(outPut);
      };

      function buyPhone() {
        getPhone.then(notifyFriends).then(havePhone)["catch"](notHasPhone);
      }

      buyPhone();
    }
    /*_emulateBackendResponse() {
        setTimeout(() => {
            console.log('Preparing data...');
            const backEndData = {
                server: "aws",
                port: '1092',
                status: 'working'
            };
            setTimeout(() => {
                backEndData.modified = true;
                console.log('Getting data', backEndData);
            }, 2000);
        }, 2000);
    }*/

    /*promiseBackendResponse() {
        let backPromise = new Promise(function (resolve, reject) {
            let isConnected = Math.random();
            const backEndData = {
                server: "aws",
                port: '1092',
                status: 'working'
            };
            console.log('Preparing answer...');
            setTimeout(()=>{
                if (isConnected > 0.5){
                    console.log('Preparing data...');
                    resolve(backEndData);
                }
                else{
                    console.log('Connection error!');
                    backEndData.status = 'closed';
                    reject(backEndData);
                }
            },2000);
        });
        let publishedConnectionResult = function(backEndData){
          return Promise.resolve('Connected complete'+` with status ${backEndData.status}`);
        };
        backPromise
            .then(publishedConnectionResult)
            .then((clientData)=>{
            setTimeout(()=>{
                console.log('Server answer',clientData);
            },2000);
        }).catch((errorClientData)=>{
            console.log('Server answer',errorClientData);
        });
    }*/

  }]);

  return TestPromises;
}();

/***/ }),

/***/ "./resources/js/init objects/errors/errorsInitObj.js":
/*!***********************************************************!*\
  !*** ./resources/js/init objects/errors/errorsInitObj.js ***!
  \***********************************************************/
/*! exports provided: errorsInitObj */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "errorsInitObj", function() { return errorsInitObj; });
var errorsInitObj = {
  borderHighlightingClass: "error-input-data",
  ajaxErrorBox: "ajax-error"
};

/***/ }),

/***/ "./resources/js/init objects/project/ajaxReqSettings.js":
/*!**************************************************************!*\
  !*** ./resources/js/init objects/project/ajaxReqSettings.js ***!
  \**************************************************************/
/*! exports provided: ajaxReqSettings */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ajaxReqSettings", function() { return ajaxReqSettings; });
/* harmony import */ var _routing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../routing */ "./resources/js/init objects/routing.js");

var ajaxReqSettings = {
  type: "DELETE",
  url: _routing__WEBPACK_IMPORTED_MODULE_0__["routing"].delete_project,
  data: null,
  headers: {
    'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content'),
    'Content-Type': 'application/json',
    'charset': 'utf-8',
    'async': true,
    'Accept': 'application/json'
  },
  preloader: "preloader"
};

/***/ }),

/***/ "./resources/js/init objects/project/projectInitObj.js":
/*!*************************************************************!*\
  !*** ./resources/js/init objects/project/projectInitObj.js ***!
  \*************************************************************/
/*! exports provided: projectInitObj */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "projectInitObj", function() { return projectInitObj; });
var projectInitObj = {
  container: '.project-wrapper-content',
  removeProject: '[title="delete project"]'
};

/***/ }),

/***/ "./resources/js/init objects/routing.js":
/*!**********************************************!*\
  !*** ./resources/js/init objects/routing.js ***!
  \**********************************************/
/*! exports provided: routing */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "routing", function() { return routing; });
var routing = {
  index: '',
  projects: 'projects',
  project: 'projects(/:id)',
  delete_project: 'project(/:id)/delete',
  tasks: '/tasks',
  update_task: 'tasks/{task}/update',
  contacts: '/contacts'
};

/***/ }),

/***/ "./resources/js/init objects/task/ajaxReqSettings.js":
/*!***********************************************************!*\
  !*** ./resources/js/init objects/task/ajaxReqSettings.js ***!
  \***********************************************************/
/*! exports provided: ajaxReqSettings */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ajaxReqSettings", function() { return ajaxReqSettings; });
/* harmony import */ var _routing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../routing */ "./resources/js/init objects/routing.js");

var ajaxReqSettings = {
  type: "PATCH",
  url: _routing__WEBPACK_IMPORTED_MODULE_0__["routing"].update_task,
  data: null,
  headers: {
    'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content'),
    'Content-Type': 'application/json',
    'charset': 'utf-8',
    'async': true,
    'Accept': 'application/json'
  }
};

/***/ }),

/***/ "./resources/js/init objects/task/taskInitObj.js":
/*!*******************************************************!*\
  !*** ./resources/js/init objects/task/taskInitObj.js ***!
  \*******************************************************/
/*! exports provided: taskInitObj */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "taskInitObj", function() { return taskInitObj; });
var taskInitObj = {
  container: '.to-do-list',
  activeEditTask: 'active-edit',
  editTask: '[title="edit task"]',
  completeTask: '[title="complete task"]',
  removeTask: '[title="delete task"]',
  saveTask: '[title="save task"]',
  cancelEditTask: '[title="cancel edit task"]'
};

/***/ }),

/***/ "./resources/less/master.less":
/*!************************************!*\
  !*** ./resources/less/master.less ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ 0:
/*!********************************************************************!*\
  !*** multi ./resources/js/_master.js ./resources/less/master.less ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! d:\temp\OSPanel_new\OSPanel\domains\laravelScratch.local\resources\js\_master.js */"./resources/js/_master.js");
module.exports = __webpack_require__(/*! d:\temp\OSPanel_new\OSPanel\domains\laravelScratch.local\resources\less\master.less */"./resources/less/master.less");


/***/ })

/******/ });